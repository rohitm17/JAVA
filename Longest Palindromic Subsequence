import java.util.*;
//Longest Palindromic Subsequence

class LPSseq
{
	public static void main(String[] args) {
		Scanner s=new Scanner(System.in);
		String str=s.next();
		int length=str.length();
		int l=length;
		int array[][]=new int[l+1][l+1];
		for(int i=0;i<=l;i++)
		{
			
				array[i][i]=1;		

		}
		int step=0;
		while(step!=length+1)
		{
			step++;
			for(int i=0;i<length-step;i++)
			{
				if(str.charAt(i)!=str.charAt(i+step))
				{
					array[i][i+step]=max(array[i][i+step-1],array[i+1][i+step]);
				}
				else
				{
					array[i][i+step]=array[i+1][i+step-1]+2;
				}
			}
		}
		for(int i=0;i<=l;i++)
		{
			
			for(int i1=0;i1<=l;i1++)
			{
			
				System.out.print(array[i][i1]+"\t");		

			}	
			System.out.println();
		}

		System.out.println(array[0][length-1]);
	}
	static int max(int a,int b)
	{
		if(a>=b){return a;}
		return b;
	}
}
